keycloak:
  enabled: {{ .Values.keycloak.enabled }}

  httpRelativePath: "/{{ trimAll "/" .Values.keycloak.ingress.basePath }}/"
  production: true

  tls:
    enabled: true
    autoGenerated: true

  auth:
    adminUser: "admin"
    adminPassword: "{{ .Values.global.secrets.keycloak.adminPassword }}"

  extraEnvVars:
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KC_HOSTNAME_URL
      value: "https://{{ .Values.global.ingress.domain }}/{{ trimAll "/" .Values.keycloak.ingress.basePath }}/"
    - name: KC_HOSTNAME_ADMIN_URL
      value: "https://{{ .Values.global.ingress.domain }}/{{ trimAll "/" .Values.keycloak.ingress.basePath }}/"

  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
      nginx.org/server-snippets: |
        location /{{ trimAll "/" .Values.keycloak.ingress.basePath }} {
          proxy_set_header X-Forwarded-For $host;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
    enabled: true
    path: "/{{ trimAll "/" .Values.keycloak.ingress.basePath }}/"
    hostname: "{{ .Values.global.ingress.domain }}"
    tls: true

  postgresql:
    nameOverride: postgresql-keycloak
    enabled: true
    auth:
      password: "{{ .Values.global.secrets.keycloak.postgresql.password }}"
    primary:
      {{- toYaml .Values.global.common.velero | nindent 6 }}
    readReplicas:
      {{- toYaml .Values.global.common.velero | nindent 6 }}

  keycloakConfigCli:
    enabled: true
    configuration:
      realm-configuration.yaml: |
        realm: vre
        enabled: true
        ssoSessionIdleTimeout: 36000
        groups:
          - name: users
            path: /users
        clientScopes:
          - id: openid
            name: openid
            protocol: openid-connect
            attributes:
              include.in.token.scope: "true"
              display.on.consent.screen: "true"
        clients:
          - clientId: naavre
            name: NaaVRE
            description: ""
            baseUrl: ""
            rootUrl: "https://{{ .Values.global.ingress.domain }}"
            redirectUris:
              - /*
            enabled: true
            publicClient: true
            clientAuthenticatorType: client-secret
            secret: "{{ .Values.global.secrets.keycloak.naavreClientSecret }}"
            secret:
            protocol: openid-connect
            protocolMappers:
              - name: Groups mapper
                protocol: openid-connect
                protocolMapper: oidc-group-membership-mapper
                consentRequired: false
                config:
                  full.path: 'false'
                  id.token.claim: 'true'
                  access.token.claim: 'true'
                  claim.name: groups
                  userinfo.token.claim: 'true'
            defaultClientScopes:
              - web-origins
              - acr
              - openid
              - profile
              - roles
              - email
