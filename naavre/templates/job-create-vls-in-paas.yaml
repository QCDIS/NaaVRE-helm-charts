{{- if .Values.jupyterhub.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "create-vls-in-paas"
  labels:
    {{- include "naavre.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade,post-rollback
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: "create-vls-in-paas"
      containers:
        - name: executor
          image: bitnami/kubectl:latest
          command: ["sh", "-c"]
          args:
            - |
              POD_NAME=$(kubectl get pod -l app.kubernetes.io/name=vreapi -o jsonpath='{.items[0].metadata.name}');
              echo "Waiting for pod $POD_NAME"
              kubectl wait --for=condition=ready pod $POD_NAME --timeout=300s || exit 1
              kubectl exec -i $POD_NAME -- /opt/venv/bin/python manage.py shell < /mnt/django_script.py
          volumeMounts:
            - mountPath: /mnt/django_script.py
              name: django-script
              subPath: django_script.py
      volumes:
        - name: django-script
          configMap:
            name: "create-vls-in-paas"
      restartPolicy: Never
  backoffLimit: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "create-vls-in-paas"
data:
  django_script.py: |
    from virtual_labs.models import VirtualLab
    {{- $baseUrl := .Values.jupyterhub.hub.baseUrl }}
    {{- $hosts := .Values.jupyterhub.ingress.hosts }}
    {{- range .Values.jupyterhub.singleuser.profileList }}
    {{- $slug := .kubespawner_override.environment.VLAB_SLUG }}
    {{- $title := .kubespawner_override.environment.VLAB_TITLE }}
    {{- $description := .kubespawner_override.environment.VLAB_DESCRIPTION }}
    {{- $image := .kubespawner_override.image }}
    print("Checking for vlab {{ $slug }}")
    if not VirtualLab.objects.filter(slug='{{ $slug }}').exists():
        print("Creating vlab {{ $slug }}")
        VirtualLab.objects.create(
            slug='{{ $slug }}',
            title='{{ $title }}',
            description='{{ $description }}',
            # This does not work because the vreapp adds a trailing slash
            # base_url='{{ trimAll "/" $baseUrl }}/?profile={{ $slug }}',
            base_url='{{ trimAll "/" $baseUrl }}',
            fqdn='{{ index $hosts 0 }}',
            ingress_ssl_port='443' ,
            image_name='{{ (split ":" $image)._0 }}',
            image_tag='{{ (split ":" $image)._1 }}',
            )
    {{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "create-vls-in-paas"
  labels:
    {{- include "naavre.labels" . | nindent 4 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "create-vls-in-paas"
  labels:
    {{- include "naavre.labels" . | nindent 4 }}
rules:
  - apiGroups: ['']
    resources: ['pods']
    verbs: ['list', 'get', 'watch']
  - apiGroups: ['']
    resources: ['pods/exec']
    verbs: ['create']
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "create-vls-in-paas"
  labels:
    {{- include "naavre.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: "create-vls-in-paas"
roleRef:
  kind: Role
  name: "create-vls-in-paas"
  apiGroup: rbac.authorization.k8s.io
{{- end }}